/*
    FICTOAN
    An intuitive, minimalist responsive HTML+CSS setup
    for designers just starting to code â€” just like me.
    by Sujan Sundareswaran
    Current version: 1.20.1

    https://github.com/sujan-s/fictoan/
    http://sujansundareswaran.com/
*/

@import "variables";



/* == RESET ================================================================ */

/*  Consider removing this if you have
    a zillion elements in your page  */
*,
*:before,
*:after { box-sizing : border-box; }

*:focus { outline : 0; }

/*  This affects all type scale values  */
html { font-size : 1em; }

body {
    -moz-osx-font-smoothing : grayscale;
    -webkit-font-smoothing  : antialiased;
}

img { display : block; }

a { text-decoration : none; }

input { outline : none; }

button { vertical-align : baseline; }

input[type="number"] { -moz-appearance : textfield; }

::-webkit-input-placeholder { opacity : 0.5; }
         ::-moz-placeholder { opacity : 0.5; }

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance : none;
    margin             : 0;
}

input[type="date"]::-webkit-inner-spin-button { display : none; }
input[type="date"]::-webkit-calendar-picker-indicator { opacity : 0; }



/* == UTILITY ============================================================== */

.show-inline  { display : inline-block; }
.show-nothing { display : none; } /* Element isn't rendered at all */
.show-empty   { visibility : hidden; } /* Element is merely invisible */

.full-width { width : 100% !important; }

.pull-left  { float : left; }
.pull-right { float : right; }
.clear-both { clear : both; }

/*  For when you want things right in the middle  */
.vertical-centre-items,
.vertical-center-items {
    display     : flex;
    align-items : center;
}

/*  Parent div needs a set height  */
.vertical-centre-this,
.vertical-center-this {
    position  : relative;
    top       : 50%;
    transform : translateY(-50%);
}

/*  Parent div needs a set width  */
.horizontal-centre-this,
.horizontal-center-this {
    position : relative;
    display  : block;
    margin   : 0 auto;
}

/*  A thin separator line that is black at 10% opacity  */
hr {
    border     : 0;
    height     : 1px;
    margin     : 4vmax 0;
    background : $colorMildGrey;
}

/* BOX MODEL HELPERS ----------------------------------- */

/*  Margins for all occasions  */
.no-margin              { margin : 0 !important; }

.margin-all-fixed       { margin : $marginFixed; }
.margin-all-tiny        { margin : $marginUnit*01; }
.margin-all-small       { margin : $marginUnit*02; }
.margin-all-medium      { margin : $marginUnit*04; }
.margin-all-large       { margin : $marginUnit*07; }
.margin-all-huge        { margin : $marginUnit*11; }

.no-margin-top          { margin-top : 0 !important; }
.margin-top-fixed       { margin-top : $marginFixed; }
.margin-top-tiny        { margin-top : $marginUnit*01; }
.margin-top-small       { margin-top : $marginUnit*02; }
.margin-top-medium      { margin-top : $marginUnit*04; }
.margin-top-large       { margin-top : $marginUnit*07; }
.margin-top-huge        { margin-top : $marginUnit*11; }

.no-margin-right        { margin-right : 0 !important; }
.margin-right-fixed     { margin-right : $marginFixed; }
.margin-right-tiny      { margin-right : $marginUnit*01; }
.margin-right-small     { margin-right : $marginUnit*02; }
.margin-right-medium    { margin-right : $marginUnit*04; }
.margin-right-large     { margin-right : $marginUnit*07; }
.margin-right-huge      { margin-right : $marginUnit*11; }

.no-margin-bottom       { margin-bottom : 0 !important; }
.margin-bottom-fixed    { margin-bottom : $marginFixed; }
.margin-bottom-tiny     { margin-bottom : $marginUnit*01; }
.margin-bottom-small    { margin-bottom : $marginUnit*02; }
.margin-bottom-medium   { margin-bottom : $marginUnit*04; }
.margin-bottom-large    { margin-bottom : $marginUnit*07; }
.margin-bottom-huge     { margin-bottom : $marginUnit*11; }

.no-margin-left         { margin-left : 0 !important; }
.margin-left-fixed      { margin-left : $marginFixed; }
.margin-left-tiny       { margin-left : $marginUnit*01; }
.margin-left-small      { margin-left : $marginUnit*02; }
.margin-left-medium     { margin-left : $marginUnit*04; }
.margin-left-large      { margin-left : $marginUnit*07; }
.margin-left-huge       { margin-left : $marginUnit*11; }


/*  Paddings for all occasions  */
.no-padding              { padding : 0  !important; }

.padding-all-fixed       { padding : $paddingFixed; }
.padding-all-tiny        { padding : $paddingUnit*01; }
.padding-all-small       { padding : $paddingUnit*02; }
.padding-all-medium      { padding : $paddingUnit*04; }
.padding-all-large       { padding : $paddingUnit*07; }
.padding-all-huge        { padding : $paddingUnit*11; }

.no-padding-top          { padding-top : 0  !important; }
.padding-top-fixed       { padding-top : $paddingFixed; }
.padding-top-tiny        { padding-top : $paddingUnit*01; }
.padding-top-small       { padding-top : $paddingUnit*02; }
.padding-top-medium      { padding-top : $paddingUnit*04; }
.padding-top-large       { padding-top : $paddingUnit*07; }
.padding-top-huge        { padding-top : $paddingUnit*11; }

.no-padding-right        { padding-right : 0  !important; }
.padding-right-fixed     { padding-right : $paddingFixed; }
.padding-right-tiny      { padding-right : $paddingUnit*01; }
.padding-right-small     { padding-right : $paddingUnit*02; }
.padding-right-medium    { padding-right : $paddingUnit*04; }
.padding-right-large     { padding-right : $paddingUnit*07; }
.padding-right-huge      { padding-right : $paddingUnit*11; }

.no-padding-bottom       { padding-bottom : 0  !important; }
.padding-bottom-fixed    { padding-bottom : $paddingFixed; }
.padding-bottom-tiny     { padding-bottom : $paddingUnit*01; }
.padding-bottom-small    { padding-bottom : $paddingUnit*02; }
.padding-bottom-medium   { padding-bottom : $paddingUnit*04; }
.padding-bottom-large    { padding-bottom : $paddingUnit*07; }
.padding-bottom-huge     { padding-bottom : $paddingUnit*11; }

.no-padding-left         { padding-left : 0  !important; }
.padding-left-fixed      { padding-left : $paddingFixed; }
.padding-left-tiny       { padding-left : $paddingUnit*01; }
.padding-left-small      { padding-left : $paddingUnit*02; }
.padding-left-medium     { padding-left : $paddingUnit*04; }
.padding-left-large      { padding-left : $paddingUnit*07; }
.padding-left-huge       { padding-left : $paddingUnit*11; }

/*  This will render an empty space of
    20% screen height where you add it  */
.empty-spacer {
    display : block;
    height  : 20vmin;
    clear   : both;
}

/*  For images and tiles  */
.shape-rounded  { border-radius : 4px; }
.shape-circular { border-radius : 50%; }
.shape-curved   { border-radius : 50000px; }

/*  Shadows for any element  */
.shadow-hard { box-shadow : 0  4px  8px  -2px hsla(0, 0, 0, 0.2); }
.shadow-soft { box-shadow : 0 24px 32px -12px hsla(0, 0, 0, 0.2); }

/* -- UTILITIES FOR SMALLER SCREENS  ------------------- */

/*  Hide on large screens  */
.show-only-on-mobile { display : none !important; }

.show-only-on-tab-pt { display : none !important; }
.show-only-on-tab-ls { display : none !important; }

@media all and (max-width : 599px) {
    .center-on-mobile,
    .centre-on-mobile { text-align : center !important; }

    .hide-on-mobile { display : none !important; }
    .show-only-on-mobile { display : block !important; }
}

@media all and (min-width : 600px) and (max-width : 899px) {
    .center-on-tab-pt,
    .centre-on-tab-pt { text-align : center !important; }

    .hide-on-tab-pt { display : none !important; }
    .show-only-on-tab-pt { display : block !important; }
}

@media all and (min-width : 900px) and (max-width : 1199px) {
    .center-on-tab-ls,
    .centre-on-tab-ls { text-align : center !important; }

    .hide-on-tab-ls { display : none !important; }
    .show-only-on-tab-ls { display : block !important; }
}



/* == TYPOGRAPHY =========================================================== */

body {
    background-color : $bodyBgColor;
    font-family      : $fontSans;
    color            : $bodyFontColor;
    line-height      : 1.6;
    word-wrap        : normal;
    text-rendering   : optimizeLegibility;
}

h1, h2, h3, h4, h5, h6 { font-family : $fontSerif; }

h1, h2, h3, h4, h5, h6 {
    font-weight : inherit;
    line-height : 1.2;
    margin      : 0;
}

h1 { font-size : $baseFontSize*pow($scaleFactor, 8); }
h2 { font-size : $baseFontSize*pow($scaleFactor, 6); }
h3 { font-size : $baseFontSize*pow($scaleFactor, 4); }
h4 { font-size : $baseFontSize*pow($scaleFactor, 3); }
h5 { font-size : $baseFontSize*pow($scaleFactor, 2); }
h6 { font-size : $baseFontSize*pow($scaleFactor, 1); }

p {
    font-family : $fontSans;
    line-height : $paraLineHeight;
    margin      : 0 0 1.5vmax 0;
}
p .text-serif {
    font-size   : $paraSerifFontSize;
    line-height : $paraSerifLineHeight;
}

a {
    cursor        : pointer;
    color         : $linkColor;
    font-weight   : 700;
    border-bottom : $linkBorder;
    transition    : all 0.2s;
}
a:hover { border-bottom : $linkHoverBorder; }
a.ff-button { border : none; }

b, strong { font-weight : 700; }
i, em { font-style : italic; }

.text-sans  { font-family : $fontSans; }
.text-serif { font-family : $fontSerif; }
.text-mono  { font-family : $fontMono; }

.text-tiny   { font-size : $baseFontSize*pow($scaleFactor,-2); }
.text-small  { font-size : $baseFontSize*pow($scaleFactor,-1); }
.text-normal { font-size : $baseFontSize*pow($scaleFactor, 0); }
.text-large  { font-size : $baseFontSize*pow($scaleFactor, 4); }
.text-huge   { font-size : $baseFontSize*pow($scaleFactor, 8); }

.text-centre,
.text-center { text-align : center; }
.text-right  { text-align : right; }
.text-left   { text-align : left; }

.no-line-height { line-height: 0; }



/* == COLOURS ============================================================== */

.bg-hue          { background-color: $colorHue }
.bg-mild         { background-color: $colorMild }
.bg-shade        { background-color: $colorShade }
.bg-dark         { background-color: $colorDark }
.bg-accent       { background-color: $colorAccent }

/* Standardized presets for backgrounds */
.bg-red          { background-color : $colorRed; }
.bg-green        { background-color : $colorGreen; }
.bg-blue         { background-color : $colorBlue; }
.bg-yellow       { background-color : $colorYellow; }
.bg-teal         { background-color : $colorTeal; }
.bg-purple       { background-color : $colorPurple; }
.bg-orange       { background-color : $colorOrange; }
.bg-brown        { background-color : $colorBrown; }
.bg-white        { background-color : $colorWhite; }
.bg-black        { background-color : $colorBlack; }
.bg-mild-grey    { background-color : $colorMildGrey; }
.bg-dark-grey    { background-color : $colorDarkGrey; }

/* Standardized presets for text */
.text-red        { color : $colorRed; }
.text-green      { color : $colorGreen; }
.text-blue       { color : $colorBlue; }
.text-yellow     { color : $colorYellow; }
.text-teal       { color : $colorTeal; }
.text-purple     { color : $colorPurple; }
.text-orange     { color : $colorOrange; }
.text-brown      { color : $colorBrown; }
.text-white      { color : $colorWhite; }
.text-black      { color : $colorBlack; }
.text-mild-grey  { color : $colorMildGrey; }
.text-dark-grey  { color : $colorDarkGrey; }

/*  Standardized presets â€” works only for inline icons  */
.icon-red        { fill : $colorRed; }
.icon-green      { fill : $colorGreen; }
.icon-blue       { fill : $colorBlue; }
.icon-yellow     { fill : $colorYellow; }
.icon-teal       { fill : $colorTeal; }
.icon-purple     { fill : $colorPurple; }
.icon-orange     { fill : $colorOrange; }
.icon-brown      { fill : $colorBrown; }
.icon-white      { fill : $colorWhite; }
.icon-black      { fill : $colorBlack; }
.icon-mild-grey  { fill : $colorMildGrey; }
.icon-dark-grey  { fill : $colorDarkGrey; }

/*  Colour of highlight and text colour
    â€” for Firefox browsers  */
::-moz-selection {
    background : $textHighlightBg;
    color      : $textHighlightColor;
}

/*  Same thing â€” for Webkit browsers  */
::selection {
    background : $textHighlightBg;
    color      : $textHighlightColor;
}



/* == CODE ==================================================== */

pre { margin : 0; }

code {
    background-color : $codeBgColor;
    font-family      : $fontMono;
    font-size        : 94%;
    color            : $codeColor;
    white-space      : pre;
    margin           : 0;
    @include borderRadius(4px);
}

code.inline {
    margin  : 0 2px;
    padding : 0 6px;
}

pre > code {
    display        : block;
    white-space    : pre;
    letter-spacing : -0.5px;
    line-height    : 1.2em;
}



/* == ICONS ====================================================== */

.icon-16 { width : 16px; }
.icon-24 { width : 24px; }
.icon-32 { width : 32px; }
.icon-48 { width : 48px; }



/* == BUTTONS ==================================================== */

/*  Basics  */
.ff-button {
    position    : relative;
    display     : inline-block;
    cursor      : pointer;
    margin      : 4px;
    padding     : 8px 24px;
    font-family : $fontSans;
    font-weight : 700;
    color       : $colorWhite;
    background  : $colorHue;
    background  : -webkit-linear-gradient(-45deg, $colorHue 0%, $colorShade 100%);
    background  :    -moz-linear-gradient(-45deg, $colorHue 0%, $colorShade 100%);
    background  :         linear-gradient(135deg, $colorHue 0%, $colorShade 100%);
    border      : none;
    transition  : all 0.1s;
    box-shadow  : 0 4px 24px -4px $colorShade;
}

/*  Button when you click on it  */
.ff-button:active {
    transform  : translateY(2px);
    box-shadow : none;
}

/*  Big button  */
.ff-button.large { padding : 16px 32px; }

/*  Button thatâ€™s just text  */
.ff-button.no-bg {
    background  : none;
    box-shadow  : none;
    color       : rgba(0, 0, 0, 1);
    text-shadow : 0 1px 1px rgba(0, 0, 0, 0.4);
}
.ff-button.no-bg:hover {
    background  : none;
    box-shadow  : none;
    color       : rgba(0, 0, 0, 0.75);
    text-shadow : 0 2px 8px rgba(0, 0, 0, 0.4);
}
.ff-button.no-bg:active {
    color       : rgba(0, 0, 0, 1);
    text-shadow : 0 0 0 rgba(0, 0, 0, 0.4);
}

.ff-button.no-shadow { box-shadow : none; }

.ff-button.shape-circular { padding : 16px; }

.ff-button.bordered {
    background: none;
    border: 2px solid $colorHue;
    color: $colorHue;
}

.ff-button path { fill : $colorWhite; }
.ff-button.no-bg path { fill : $colorShade; }

.ff-button.disabled {
    pointer-events : none;
    background     : $colorMildGrey;
    box-shadow     : none;
}



/* == INPUT FIELDS ========================================================= */

input[type=text],
input[type=password],
input[type=number],
input[type=date] {
    width         : 100%;
    border        : none;
    outline       : none;
    background    : none;
    padding       : 4px;
    border-bottom : 1px solid rgba($colorBlack, 0.4);
}

input:focus,
input:active {
    padding-bottom : 3px;
    border-bottom  : 2px solid $colorHue;
}



/* == TOGGLES ============================================================== */

input[type=checkbox] { display : none; }

.ff-checkbox {
    display      : inline-block;
    margin-right : 10px;
}

.ff-checkbox label {
    cursor         : pointer;
    vertical-align : middle;
}

/*  The grey background  */
.ff-checkbox input[type=checkbox] + label {
    position      : relative;
    display       : inline-block;
    width         : 40px;
    height        : 20px;
    margin-right  : 10px;
    background    : $colorMildGrey;
    border-radius : 10px; /*  Basically half of the height  */
    cursor        : pointer;
    transition    : all 0.1s ease-out;
    box-shadow    : 0 2px 6px -2px rgba(0, 0, 0, 0.25) inset;
}

/*  The white switch inside  */
.ff-checkbox input[type=checkbox] + label:after {
    position           : absolute;
    display            : block;
    left               : 2px;
    top                : 2px;
    width              : 16px;
    height             : 16px;
    background         : #fff;
    border-radius      : 50%;
    content            : '';
    transition         : all 0.1s ease-out;
    -webkit-box-shadow : 0 4px 8px -4px rgba(0, 0, 0, 0.6);
    -moz-box-shadow    : 0 4px 8px -4px rgba(0, 0, 0, 0.6);
    box-shadow         : 0 4px 8px -4px rgba(0, 0, 0, 0.6);
}

/*  The bg when checked  */
.ff-checkbox input[type=checkbox]:checked + label { background : $checkboxBgColor; }

.ff-checkbox input[type=checkbox]:checked + label:after { left : 22px; }

.ff-checkbox input[type=checkbox]:disabled + label,
.ff-checkbox input[type=checkbox]:disabled:checked + label { pointer-events : none; }

.ff-checkbox input[type=checkbox]:disabled ~ label {
    cursor  : default;
    opacity : 0.3;
}

/*  The switch when disabled  */
.ff-checkbox input[type=checkbox]:checked + label:after {
    display    : block;
    background : #f8f8f8;
    box-shadow : none;
}

/* == TOGGLES ============================================================== */

input[type=radio] { display : none; }

.ff-radio label {
    cursor         : pointer;
    vertical-align : middle;
}

/*  The grey background  */
.ff-radio input[type=radio] + label {
    position      : relative;
    display       : inline-block;
    width         : 20px;
    height        : 20px;
    margin-right  : 10px;
    background    : #ddd;
    border-radius : 10px; /*  Basically half of the height  */
    cursor        : pointer;
    transition    : all 0.1s ease-out;
    box-shadow    : 0 2px 6px -2px rgba(0, 0, 0, 0.25) inset;
}

/*  The white circle inside  */
.ff-radio input[type=radio] + label:after {
    position      : absolute;
    display       : none;
    left          : 5px;
    top           : 5px;
    width         : 10px;
    height        : 10px;
    background    : #fff;
    border-radius : 50%;
    content       : '';
    transition    : all 0.1s ease-out;
}

/*  The bg when checked  */
.ff-radio input[type=radio]:checked + label { background : $radioBgColor; }

.ff-radio input[type=radio]:disabled + label,
.ff-radio input[type=radio]:disabled:checked + label { pointer-events : none; }

.ff-radio input[type=radio]:disabled ~ label {
    cursor  : default;
    opacity : 0.3;
}

/*  The switch when disabled  */
.ff-radio input[type=radio]:checked + label:after {
    display    : block;
    background : #f8f8f8;
    box-shadow : none;
}



/* == MODALS =============================================================== */

.ff-modal {
    position       : fixed;
    top            : 0;
    right          : 0;
    bottom         : 0;
    left           : 0;
    opacity        : 0;
    background     : rgba(0, 0, 0, 0.8);
    z-index        : 99999;
    transition     : opacity 0.4s ease-in;
    pointer-events : none;
}
.ff-modal:target {
    opacity        : 1;
    pointer-events : auto;
}

.ff-modal > div {
    position : relative;
    width    : 400px;
    margin   : 10vmin auto;
}



/* == CUSTOM INTERFACE ELEMENTS =========================================== */

.card {
    width         : 100%;
    height        : auto;
    padding       : 32px;
    background    : #fff;
    border-radius : 4px;
    border        : 1px solid hsla(0, 0%, 0%, 0.05);
}
.card-smaller { padding : 16px 24px; }

.full-size-bg {
    position        : absolute;
    width           : 100vw;
    height          : 100vh;
    top             : 0;
    left            : 0;
    background      : url("../images/") center top; /*  Add the filename here  */
    background-size : cover;
    z-index         : -5;
}
.full-size-bg-fixed {
    @extend .full-size-bg;
    position : fixed !important;
}